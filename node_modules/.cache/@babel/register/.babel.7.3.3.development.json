{
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nrequire(\"@babel/polyfill\");\n\nvar _Comment = _interopRequireDefault(require(\"./src/usingJSObject/controllers/Comment\"));\n\nvar _Comment2 = _interopRequireDefault(require(\"./src/usingDB/controllers/Comment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_dotenv.default.config();\n\nvar Comment = process.env.TYPE === 'db' ? _Comment2.default : _Comment.default;\nvar app = (0, _express.default)();\napp.use(_express.default.json());\napp.get('/', function (req, res) {\n  return res.status(200).json({\n    'message': 'YAT! Congratulation hello world test tesat'\n  });\n});\napp.post('/api/v1/comments', Comment.create);\napp.get('/api/v1/comments', Comment.getAll);\napp.get('/api/v1/comments/:id', Comment.getOne);\napp.put('/api/v1/comments/:id', Comment.update);\napp.delete('/api/v1/comments/:id', Comment.delete);\napp.listen(3000);\nconsole.log('app running on port', 3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJDb21tZW50IiwicHJvY2VzcyIsImVudiIsIlRZUEUiLCJDb21tZW50V2l0aERCIiwiQ29tbWVudFdpdGhKc09iamVjdCIsImFwcCIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwicG9zdCIsImNyZWF0ZSIsImdldEFsbCIsImdldE9uZSIsInB1dCIsInVwZGF0ZSIsImRlbGV0ZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEsZ0JBQU9DLE1BQVA7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixLQUFxQixJQUFyQixHQUE0QkMsaUJBQTVCLEdBQTRDQyxnQkFBNUQ7QUFDQSxJQUFNQyxHQUFHLEdBQUcsdUJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLGlCQUFRQyxJQUFSLEVBQVI7QUFFQUgsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCLFNBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JKLElBQWhCLENBQXFCO0FBQUMsZUFBVztBQUFaLEdBQXJCLENBQVA7QUFDSCxDQUZEO0FBS0FILEdBQUcsQ0FBQ1EsSUFBSixDQUFTLGtCQUFULEVBQTZCZCxPQUFPLENBQUNlLE1BQXJDO0FBQ0FULEdBQUcsQ0FBQ0ksR0FBSixDQUFRLGtCQUFSLEVBQTRCVixPQUFPLENBQUNnQixNQUFwQztBQUNBVixHQUFHLENBQUNJLEdBQUosQ0FBUSxzQkFBUixFQUFnQ1YsT0FBTyxDQUFDaUIsTUFBeEM7QUFDQVgsR0FBRyxDQUFDWSxHQUFKLENBQVEsc0JBQVIsRUFBZ0NsQixPQUFPLENBQUNtQixNQUF4QztBQUNBYixHQUFHLENBQUNjLE1BQUosQ0FBVyxzQkFBWCxFQUFtQ3BCLE9BQU8sQ0FBQ29CLE1BQTNDO0FBRUFkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXLElBQVg7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosRUFBbUMsSUFBbkMiLCJzb3VyY2VSb290IjoiL1VzZXJzL21ldGlrYS5vL3RyYWluaW5nL2V4cHJlc3NfcG9zdGdyZXNxbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IFwiQGJhYmVsL3BvbHlmaWxsXCI7XG5pbXBvcnQgQ29tbWVudFdpdGhKc09iamVjdCBmcm9tICcuL3NyYy91c2luZ0pTT2JqZWN0L2NvbnRyb2xsZXJzL0NvbW1lbnQnO1xuaW1wb3J0IENvbW1lbnRXaXRoREIgZnJvbSAnLi9zcmMvdXNpbmdEQi9jb250cm9sbGVycy9Db21tZW50JztcblxuZG90ZW52LmNvbmZpZygpO1xuY29uc3QgQ29tbWVudCA9IHByb2Nlc3MuZW52LlRZUEUgPT09ICdkYicgPyBDb21tZW50V2l0aERCIDogQ29tbWVudFdpdGhKc09iamVjdFxuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpXG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeydtZXNzYWdlJzogJ1lBVCEgQ29uZ3JhdHVsYXRpb24gaGVsbG8gd29ybGQgdGVzdCB0ZXNhdCd9KVxufSlcblxuXG5hcHAucG9zdCgnL2FwaS92MS9jb21tZW50cycsIENvbW1lbnQuY3JlYXRlKTtcbmFwcC5nZXQoJy9hcGkvdjEvY29tbWVudHMnLCBDb21tZW50LmdldEFsbCk7XG5hcHAuZ2V0KCcvYXBpL3YxL2NvbW1lbnRzLzppZCcsIENvbW1lbnQuZ2V0T25lKTtcbmFwcC5wdXQoJy9hcGkvdjEvY29tbWVudHMvOmlkJywgQ29tbWVudC51cGRhdGUpO1xuYXBwLmRlbGV0ZSgnL2FwaS92MS9jb21tZW50cy86aWQnLCBDb21tZW50LmRlbGV0ZSk7XG5cbmFwcC5saXN0ZW4oMzAwMClcbmNvbnNvbGUubG9nKCdhcHAgcnVubmluZyBvbiBwb3J0JywgMzAwMCkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dotenv",
        "config",
        "Comment",
        "process",
        "env",
        "TYPE",
        "CommentWithDB",
        "CommentWithJsObject",
        "app",
        "use",
        "express",
        "json",
        "get",
        "req",
        "res",
        "status",
        "post",
        "create",
        "getAll",
        "getOne",
        "put",
        "update",
        "delete",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,gBAAOC,MAAP;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,KAAqB,IAArB,GAA4BC,iBAA5B,GAA4CC,gBAA5D;AACA,IAAMC,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,SAAOA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAC,eAAW;AAAZ,GAArB,CAAP;AACH,CAFD;AAKAH,GAAG,CAACQ,IAAJ,CAAS,kBAAT,EAA6Bd,OAAO,CAACe,MAArC;AACAT,GAAG,CAACI,GAAJ,CAAQ,kBAAR,EAA4BV,OAAO,CAACgB,MAApC;AACAV,GAAG,CAACI,GAAJ,CAAQ,sBAAR,EAAgCV,OAAO,CAACiB,MAAxC;AACAX,GAAG,CAACY,GAAJ,CAAQ,sBAAR,EAAgClB,OAAO,CAACmB,MAAxC;AACAb,GAAG,CAACc,MAAJ,CAAW,sBAAX,EAAmCpB,OAAO,CAACoB,MAA3C;AAEAd,GAAG,CAACe,MAAJ,CAAW,IAAX;AACAC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,IAAnC",
      "sourceRoot": "/Users/metika.o/training/express_postgresql",
      "sourcesContent": [
        "import express from 'express';\nimport dotenv from 'dotenv';\nimport \"@babel/polyfill\";\nimport CommentWithJsObject from './src/usingJSObject/controllers/Comment';\nimport CommentWithDB from './src/usingDB/controllers/Comment';\n\ndotenv.config();\nconst Comment = process.env.TYPE === 'db' ? CommentWithDB : CommentWithJsObject\nconst app = express()\n\napp.use(express.json())\n\napp.get('/', (req, res) => {\n    return res.status(200).json({'message': 'YAT! Congratulation hello world test tesat'})\n})\n\n\napp.post('/api/v1/comments', Comment.create);\napp.get('/api/v1/comments', Comment.getAll);\napp.get('/api/v1/comments/:id', Comment.getOne);\napp.put('/api/v1/comments/:id', Comment.update);\napp.delete('/api/v1/comments/:id', Comment.delete);\n\napp.listen(3000)\nconsole.log('app running on port', 3000)"
      ]
    },
    "sourceType": "script",
    "mtime": 1550369332798
  },
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/src/controllers/Comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/src/controllers/Comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/src/controllers/Comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/src/controllers/Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql/src/controllers",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Comment = _interopRequireDefault(require(\"../models/Comment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Comment = {\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object \n   */\n  create: function create(req, res) {\n    if (!req.body.success && !req.body.lowPoint && !req.body.takeAway) {\n      return res.status(400).send({\n        'message': 'All fields are required'\n      });\n    }\n\n    var comment = _Comment.default.create(req.body);\n\n    return res.status(201).send(comment);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} comments array\n   */\n  getAll: function getAll(req, res) {\n    var comments = _Comment.default.findAll();\n\n    return res.status(200).send(comments);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object\n   */\n  getOne: function getOne(req, res) {\n    var comment = _Comment.default.findOne(req.params.id);\n\n    if (!comment) {\n      return res.status(404).send({\n        'message': 'comment not found'\n      });\n    }\n\n    return res.status(200).send(comment);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated comment\n   */\n  update: function update(req, res) {\n    var comment = _Comment.default.findOne(req.params.id);\n\n    if (!comment) {\n      return res.status(404).send({\n        'message': 'comment not found'\n      });\n    }\n\n    var updatedComment = _Comment.default.update(req.params.id, req.body);\n\n    return res.status(200).send(updatedComment);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n  delete: function _delete(req, res) {\n    var comment = _Comment.default.findOne(req.params.id);\n\n    if (!comment) {\n      return res.status(404).send({\n        'message': 'comment not found'\n      });\n    }\n\n    var ref = _Comment.default.delete(req.params.id);\n\n    return res.status(204).send(ref);\n  }\n};\nvar _default = Comment;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudCIsImNyZWF0ZSIsInJlcSIsInJlcyIsImJvZHkiLCJzdWNjZXNzIiwibG93UG9pbnQiLCJ0YWtlQXdheSIsInN0YXR1cyIsInNlbmQiLCJjb21tZW50IiwiQ29tbWVudE1vZGVsIiwiZ2V0QWxsIiwiY29tbWVudHMiLCJmaW5kQWxsIiwiZ2V0T25lIiwiZmluZE9uZSIsInBhcmFtcyIsImlkIiwidXBkYXRlIiwidXBkYXRlZENvbW1lbnQiLCJkZWxldGUiLCJyZWYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLE9BQU8sR0FBRztBQUNkOzs7Ozs7QUFNQUMsRUFBQUEsTUFQYyxrQkFPUEMsR0FQTyxFQU9GQyxHQVBFLEVBT0c7QUFDZixRQUFJLENBQUNELEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxPQUFWLElBQXFCLENBQUNILEdBQUcsQ0FBQ0UsSUFBSixDQUFTRSxRQUEvQixJQUEyQyxDQUFDSixHQUFHLENBQUNFLElBQUosQ0FBU0csUUFBekQsRUFBbUU7QUFDakUsYUFBT0osR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQyxtQkFBVztBQUFaLE9BQXJCLENBQVA7QUFDRDs7QUFDRCxRQUFNQyxPQUFPLEdBQUdDLGlCQUFhVixNQUFiLENBQW9CQyxHQUFHLENBQUNFLElBQXhCLENBQWhCOztBQUNBLFdBQU9ELEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxPQUFyQixDQUFQO0FBQ0QsR0FiYTs7QUFjZDs7Ozs7O0FBTUFFLEVBQUFBLE1BcEJjLGtCQW9CUFYsR0FwQk8sRUFvQkZDLEdBcEJFLEVBb0JHO0FBQ2YsUUFBTVUsUUFBUSxHQUFHRixpQkFBYUcsT0FBYixFQUFqQjs7QUFDQSxXQUFPWCxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkksUUFBckIsQ0FBUDtBQUNELEdBdkJhOztBQXdCZDs7Ozs7O0FBTUFFLEVBQUFBLE1BOUJjLGtCQThCUGIsR0E5Qk8sRUE4QkZDLEdBOUJFLEVBOEJHO0FBQ2YsUUFBTU8sT0FBTyxHQUFHQyxpQkFBYUssT0FBYixDQUFxQmQsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEVBQWhDLENBQWhCOztBQUNBLFFBQUksQ0FBQ1IsT0FBTCxFQUFjO0FBQ1osYUFBT1AsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQyxtQkFBVztBQUFaLE9BQXJCLENBQVA7QUFDRDs7QUFDRCxXQUFPTixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsT0FBckIsQ0FBUDtBQUNELEdBcENhOztBQXFDZDs7Ozs7O0FBTUFTLEVBQUFBLE1BM0NjLGtCQTJDUGpCLEdBM0NPLEVBMkNGQyxHQTNDRSxFQTJDRztBQUNmLFFBQU1PLE9BQU8sR0FBR0MsaUJBQWFLLE9BQWIsQ0FBcUJkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFQUFoQyxDQUFoQjs7QUFDQSxRQUFJLENBQUNSLE9BQUwsRUFBYztBQUNaLGFBQU9QLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUMsbUJBQVc7QUFBWixPQUFyQixDQUFQO0FBQ0Q7O0FBQ0QsUUFBTVcsY0FBYyxHQUFHVCxpQkFBYVEsTUFBYixDQUFvQmpCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFQUEvQixFQUFtQ2hCLEdBQUcsQ0FBQ0UsSUFBdkMsQ0FBdkI7O0FBQ0EsV0FBT0QsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJXLGNBQXJCLENBQVA7QUFDRCxHQWxEYTs7QUFtRGQ7Ozs7OztBQU1BQyxFQUFBQSxNQXpEYyxtQkF5RFBuQixHQXpETyxFQXlERkMsR0F6REUsRUF5REc7QUFDZixRQUFNTyxPQUFPLEdBQUdDLGlCQUFhSyxPQUFiLENBQXFCZCxHQUFHLENBQUNlLE1BQUosQ0FBV0MsRUFBaEMsQ0FBaEI7O0FBQ0EsUUFBSSxDQUFDUixPQUFMLEVBQWM7QUFDWixhQUFPUCxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLG1CQUFXO0FBQVosT0FBckIsQ0FBUDtBQUNEOztBQUNELFFBQU1hLEdBQUcsR0FBR1gsaUJBQWFVLE1BQWIsQ0FBb0JuQixHQUFHLENBQUNlLE1BQUosQ0FBV0MsRUFBL0IsQ0FBWjs7QUFDQSxXQUFPZixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQmEsR0FBckIsQ0FBUDtBQUNEO0FBaEVhLENBQWhCO2VBbUVldEIsTyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbWV0aWthLm8vdHJhaW5pbmcvZXhwcmVzc19wb3N0Z3Jlc3FsL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tZW50TW9kZWwgZnJvbSAnLi4vbW9kZWxzL0NvbW1lbnQnO1xuXG5jb25zdCBDb21tZW50ID0ge1xuICAvKipcbiAgICogXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge29iamVjdH0gY29tbWVudCBvYmplY3QgXG4gICAqL1xuICBjcmVhdGUocmVxLCByZXMpIHtcbiAgICBpZiAoIXJlcS5ib2R5LnN1Y2Nlc3MgJiYgIXJlcS5ib2R5Lmxvd1BvaW50ICYmICFyZXEuYm9keS50YWtlQXdheSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsnbWVzc2FnZSc6ICdBbGwgZmllbGRzIGFyZSByZXF1aXJlZCd9KVxuICAgIH1cbiAgICBjb25zdCBjb21tZW50ID0gQ29tbWVudE1vZGVsLmNyZWF0ZShyZXEuYm9keSk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5zZW5kKGNvbW1lbnQpO1xuICB9LFxuICAvKipcbiAgICogXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXMgXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbW1lbnRzIGFycmF5XG4gICAqL1xuICBnZXRBbGwocmVxLCByZXMpIHtcbiAgICBjb25zdCBjb21tZW50cyA9IENvbW1lbnRNb2RlbC5maW5kQWxsKCk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGNvbW1lbnRzKTtcbiAgfSxcbiAgLyoqXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbW1lbnQgb2JqZWN0XG4gICAqL1xuICBnZXRPbmUocmVxLCByZXMpIHtcbiAgICBjb25zdCBjb21tZW50ID0gQ29tbWVudE1vZGVsLmZpbmRPbmUocmVxLnBhcmFtcy5pZCk7XG4gICAgaWYgKCFjb21tZW50KSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLnNlbmQoeydtZXNzYWdlJzogJ2NvbW1lbnQgbm90IGZvdW5kJ30pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoY29tbWVudCk7XG4gIH0sXG4gIC8qKlxuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSBcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyBcbiAgICogQHJldHVybnMge29iamVjdH0gdXBkYXRlZCBjb21tZW50XG4gICAqL1xuICB1cGRhdGUocmVxLCByZXMpIHtcbiAgICBjb25zdCBjb21tZW50ID0gQ29tbWVudE1vZGVsLmZpbmRPbmUocmVxLnBhcmFtcy5pZCk7XG4gICAgaWYgKCFjb21tZW50KSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLnNlbmQoeydtZXNzYWdlJzogJ2NvbW1lbnQgbm90IGZvdW5kJ30pO1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGVkQ29tbWVudCA9IENvbW1lbnRNb2RlbC51cGRhdGUocmVxLnBhcmFtcy5pZCwgcmVxLmJvZHkpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHVwZGF0ZWRDb21tZW50KTtcbiAgfSxcbiAgLyoqXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIFxuICAgKiBAcmV0dXJucyB7dm9pZH0gcmV0dXJuIHN0YXR1YyBjb2RlIDIwNCBcbiAgICovXG4gIGRlbGV0ZShyZXEsIHJlcykge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBDb21tZW50TW9kZWwuZmluZE9uZShyZXEucGFyYW1zLmlkKTtcbiAgICBpZiAoIWNvbW1lbnQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnY29tbWVudCBub3QgZm91bmQnfSk7XG4gICAgfVxuICAgIGNvbnN0IHJlZiA9IENvbW1lbnRNb2RlbC5kZWxldGUocmVxLnBhcmFtcy5pZCk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjA0KS5zZW5kKHJlZik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29tbWVudDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "Comment",
        "create",
        "req",
        "res",
        "body",
        "success",
        "lowPoint",
        "takeAway",
        "status",
        "send",
        "comment",
        "CommentModel",
        "getAll",
        "comments",
        "findAll",
        "getOne",
        "findOne",
        "params",
        "id",
        "update",
        "updatedComment",
        "delete",
        "ref"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,OAAO,GAAG;AACd;;;;;;AAMAC,EAAAA,MAPc,kBAOPC,GAPO,EAOFC,GAPE,EAOG;AACf,QAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,OAAV,IAAqB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAA/B,IAA2C,CAACJ,GAAG,CAACE,IAAJ,CAASG,QAAzD,EAAmE;AACjE,aAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMC,OAAO,GAAGC,iBAAaV,MAAb,CAAoBC,GAAG,CAACE,IAAxB,CAAhB;;AACA,WAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAP;AACD,GAba;;AAcd;;;;;;AAMAE,EAAAA,MApBc,kBAoBPV,GApBO,EAoBFC,GApBE,EAoBG;AACf,QAAMU,QAAQ,GAAGF,iBAAaG,OAAb,EAAjB;;AACA,WAAOX,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,QAArB,CAAP;AACD,GAvBa;;AAwBd;;;;;;AAMAE,EAAAA,MA9Bc,kBA8BPb,GA9BO,EA8BFC,GA9BE,EA8BG;AACf,QAAMO,OAAO,GAAGC,iBAAaK,OAAb,CAAqBd,GAAG,CAACe,MAAJ,CAAWC,EAAhC,CAAhB;;AACA,QAAI,CAACR,OAAL,EAAc;AACZ,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAON,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAP;AACD,GApCa;;AAqCd;;;;;;AAMAS,EAAAA,MA3Cc,kBA2CPjB,GA3CO,EA2CFC,GA3CE,EA2CG;AACf,QAAMO,OAAO,GAAGC,iBAAaK,OAAb,CAAqBd,GAAG,CAACe,MAAJ,CAAWC,EAAhC,CAAhB;;AACA,QAAI,CAACR,OAAL,EAAc;AACZ,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMW,cAAc,GAAGT,iBAAaQ,MAAb,CAAoBjB,GAAG,CAACe,MAAJ,CAAWC,EAA/B,EAAmChB,GAAG,CAACE,IAAvC,CAAvB;;AACA,WAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBW,cAArB,CAAP;AACD,GAlDa;;AAmDd;;;;;;AAMAC,EAAAA,MAzDc,mBAyDPnB,GAzDO,EAyDFC,GAzDE,EAyDG;AACf,QAAMO,OAAO,GAAGC,iBAAaK,OAAb,CAAqBd,GAAG,CAACe,MAAJ,CAAWC,EAAhC,CAAhB;;AACA,QAAI,CAACR,OAAL,EAAc;AACZ,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMa,GAAG,GAAGX,iBAAaU,MAAb,CAAoBnB,GAAG,CAACe,MAAJ,CAAWC,EAA/B,CAAZ;;AACA,WAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,GAArB,CAAP;AACD;AAhEa,CAAhB;eAmEetB,O",
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/controllers",
      "sourcesContent": [
        "import CommentModel from '../models/Comment';\n\nconst Comment = {\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object \n   */\n  create(req, res) {\n    if (!req.body.success && !req.body.lowPoint && !req.body.takeAway) {\n      return res.status(400).send({'message': 'All fields are required'})\n    }\n    const comment = CommentModel.create(req.body);\n    return res.status(201).send(comment);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} comments array\n   */\n  getAll(req, res) {\n    const comments = CommentModel.findAll();\n    return res.status(200).send(comments);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object\n   */\n  getOne(req, res) {\n    const comment = CommentModel.findOne(req.params.id);\n    if (!comment) {\n      return res.status(404).send({'message': 'comment not found'});\n    }\n    return res.status(200).send(comment);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated comment\n   */\n  update(req, res) {\n    const comment = CommentModel.findOne(req.params.id);\n    if (!comment) {\n      return res.status(404).send({'message': 'comment not found'});\n    }\n    const updatedComment = CommentModel.update(req.params.id, req.body)\n    return res.status(200).send(updatedComment);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n  delete(req, res) {\n    const comment = CommentModel.findOne(req.params.id);\n    if (!comment) {\n      return res.status(404).send({'message': 'comment not found'});\n    }\n    const ref = CommentModel.delete(req.params.id);\n    return res.status(204).send(ref);\n  }\n}\n\nexport default Comment;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550364929369
  },
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/src/models/Comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/src/models/Comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/src/models/Comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/src/models/Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql/src/models",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Comment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * class constructor\n   * @param {object} data\n   */\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    this.comments = [];\n  }\n  /**\n   * \n   * @returns {object} comment object\n   */\n\n\n  _createClass(Comment, [{\n    key: \"create\",\n    value: function create(data) {\n      var newComment = {\n        id: _uuid.default.v4(),\n        success: data.success || '',\n        lowPoint: data.lowPoint || '',\n        takeAway: data.takeAway || '',\n        createdDate: _moment.default.now(),\n        modifiedDate: _moment.default.now()\n      };\n      this.comments.push(newComment);\n      return newComment;\n    }\n    /**\n     * \n     * @param {uuid} id\n     * @returns {object} comment object\n     */\n\n  }, {\n    key: \"findOne\",\n    value: function findOne(id) {\n      return this.comments.find(function (cm) {\n        return cm.id === id;\n      });\n    }\n    /**\n     * @returns {object} returns all comments\n     */\n\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      return this.comments;\n    }\n    /**\n     * \n     * @param {uuid} id\n     * @param {object} data \n     */\n\n  }, {\n    key: \"update\",\n    value: function update(id, data) {\n      var comment = this.findOne(id);\n      var index = this.comments.indexOf(comment);\n      this.comments[index].success = data['success'] || comment.success;\n      this.comments[index].lowPoint = data['lowPoint'] || comment.lowPoint;\n      this.comments[index].takeAway = data['takeAway'] || comment.takeAway;\n      this.comments[index].modifiedDate = _moment.default.now();\n      return this.comments[index];\n    }\n    /**\n     * \n     * @param {uuid} id \n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var comment = this.findOne(id);\n      var index = this.comments.indexOf(comment);\n      this.comments.splice(index, 1);\n      return {};\n    }\n  }]);\n\n  return Comment;\n}();\n\nvar _default = new Comment();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudCIsImNvbW1lbnRzIiwiZGF0YSIsIm5ld0NvbW1lbnQiLCJpZCIsInV1aWQiLCJ2NCIsInN1Y2Nlc3MiLCJsb3dQb2ludCIsInRha2VBd2F5IiwiY3JlYXRlZERhdGUiLCJtb21lbnQiLCJub3ciLCJtb2RpZmllZERhdGUiLCJwdXNoIiwiZmluZCIsImNtIiwiY29tbWVudCIsImZpbmRPbmUiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztJQUVNQSxPOzs7QUFDSjs7OztBQUlBLHFCQUFjO0FBQUE7O0FBQ1osU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNEO0FBQ0Q7Ozs7Ozs7OzJCQUlPQyxJLEVBQU07QUFDWCxVQUFNQyxVQUFVLEdBQUc7QUFDakJDLFFBQUFBLEVBQUUsRUFBRUMsY0FBS0MsRUFBTCxFQURhO0FBRWpCQyxRQUFBQSxPQUFPLEVBQUVMLElBQUksQ0FBQ0ssT0FBTCxJQUFnQixFQUZSO0FBR2pCQyxRQUFBQSxRQUFRLEVBQUVOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixFQUhWO0FBSWpCQyxRQUFBQSxRQUFRLEVBQUVQLElBQUksQ0FBQ08sUUFBTCxJQUFpQixFQUpWO0FBS2pCQyxRQUFBQSxXQUFXLEVBQUVDLGdCQUFPQyxHQUFQLEVBTEk7QUFNakJDLFFBQUFBLFlBQVksRUFBRUYsZ0JBQU9DLEdBQVA7QUFORyxPQUFuQjtBQVFBLFdBQUtYLFFBQUwsQ0FBY2EsSUFBZCxDQUFtQlgsVUFBbkI7QUFDQSxhQUFPQSxVQUFQO0FBQ0Q7QUFDRDs7Ozs7Ozs7NEJBS1FDLEUsRUFBSTtBQUNWLGFBQU8sS0FBS0gsUUFBTCxDQUFjYyxJQUFkLENBQW1CLFVBQUFDLEVBQUU7QUFBQSxlQUFJQSxFQUFFLENBQUNaLEVBQUgsS0FBVUEsRUFBZDtBQUFBLE9BQXJCLENBQVA7QUFDRDtBQUNEOzs7Ozs7OEJBR1U7QUFDUixhQUFPLEtBQUtILFFBQVo7QUFDRDtBQUNEOzs7Ozs7OzsyQkFLT0csRSxFQUFJRixJLEVBQU07QUFDZixVQUFNZSxPQUFPLEdBQUcsS0FBS0MsT0FBTCxDQUFhZCxFQUFiLENBQWhCO0FBQ0EsVUFBTWUsS0FBSyxHQUFHLEtBQUtsQixRQUFMLENBQWNtQixPQUFkLENBQXNCSCxPQUF0QixDQUFkO0FBQ0EsV0FBS2hCLFFBQUwsQ0FBY2tCLEtBQWQsRUFBcUJaLE9BQXJCLEdBQStCTCxJQUFJLENBQUMsU0FBRCxDQUFKLElBQW1CZSxPQUFPLENBQUNWLE9BQTFEO0FBQ0EsV0FBS04sUUFBTCxDQUFja0IsS0FBZCxFQUFxQlgsUUFBckIsR0FBZ0NOLElBQUksQ0FBQyxVQUFELENBQUosSUFBb0JlLE9BQU8sQ0FBQ1QsUUFBNUQ7QUFDQSxXQUFLUCxRQUFMLENBQWNrQixLQUFkLEVBQXFCVixRQUFyQixHQUFnQ1AsSUFBSSxDQUFDLFVBQUQsQ0FBSixJQUFvQmUsT0FBTyxDQUFDUixRQUE1RDtBQUNBLFdBQUtSLFFBQUwsQ0FBY2tCLEtBQWQsRUFBcUJOLFlBQXJCLEdBQW9DRixnQkFBT0MsR0FBUCxFQUFwQztBQUNBLGFBQU8sS0FBS1gsUUFBTCxDQUFja0IsS0FBZCxDQUFQO0FBQ0Q7QUFDRDs7Ozs7Ozs0QkFJT2YsRSxFQUFJO0FBQ1QsVUFBTWEsT0FBTyxHQUFHLEtBQUtDLE9BQUwsQ0FBYWQsRUFBYixDQUFoQjtBQUNBLFVBQU1lLEtBQUssR0FBRyxLQUFLbEIsUUFBTCxDQUFjbUIsT0FBZCxDQUFzQkgsT0FBdEIsQ0FBZDtBQUNBLFdBQUtoQixRQUFMLENBQWNvQixNQUFkLENBQXFCRixLQUFyQixFQUE0QixDQUE1QjtBQUNBLGFBQU8sRUFBUDtBQUNEOzs7Ozs7ZUFFWSxJQUFJbkIsT0FBSixFIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tZXRpa2Euby90cmFpbmluZy9leHByZXNzX3Bvc3RncmVzcWwvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCB1dWlkIGZyb20gJ3V1aWQnO1xuXG5jbGFzcyBDb21tZW50IHtcbiAgLyoqXG4gICAqIGNsYXNzIGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNvbW1lbnRzID0gW107XG4gIH1cbiAgLyoqXG4gICAqIFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBjb21tZW50IG9iamVjdFxuICAgKi9cbiAgY3JlYXRlKGRhdGEpIHtcbiAgICBjb25zdCBuZXdDb21tZW50ID0ge1xuICAgICAgaWQ6IHV1aWQudjQoKSxcbiAgICAgIHN1Y2Nlc3M6IGRhdGEuc3VjY2VzcyB8fCAnJyxcbiAgICAgIGxvd1BvaW50OiBkYXRhLmxvd1BvaW50IHx8ICcnLFxuICAgICAgdGFrZUF3YXk6IGRhdGEudGFrZUF3YXkgfHwgJycsXG4gICAgICBjcmVhdGVkRGF0ZTogbW9tZW50Lm5vdygpLFxuICAgICAgbW9kaWZpZWREYXRlOiBtb21lbnQubm93KClcbiAgICB9O1xuICAgIHRoaXMuY29tbWVudHMucHVzaChuZXdDb21tZW50KTtcbiAgICByZXR1cm4gbmV3Q29tbWVudFxuICB9XG4gIC8qKlxuICAgKiBcbiAgICogQHBhcmFtIHt1dWlkfSBpZFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBjb21tZW50IG9iamVjdFxuICAgKi9cbiAgZmluZE9uZShpZCkge1xuICAgIHJldHVybiB0aGlzLmNvbW1lbnRzLmZpbmQoY20gPT4gY20uaWQgPT09IGlkKTtcbiAgfVxuICAvKipcbiAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyBhbGwgY29tbWVudHNcbiAgICovXG4gIGZpbmRBbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29tbWVudHM7XG4gIH1cbiAgLyoqXG4gICAqIFxuICAgKiBAcGFyYW0ge3V1aWR9IGlkXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIFxuICAgKi9cbiAgdXBkYXRlKGlkLCBkYXRhKSB7XG4gICAgY29uc3QgY29tbWVudCA9IHRoaXMuZmluZE9uZShpZCk7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLmNvbW1lbnRzLmluZGV4T2YoY29tbWVudCk7XG4gICAgdGhpcy5jb21tZW50c1tpbmRleF0uc3VjY2VzcyA9IGRhdGFbJ3N1Y2Nlc3MnXSB8fCBjb21tZW50LnN1Y2Nlc3M7XG4gICAgdGhpcy5jb21tZW50c1tpbmRleF0ubG93UG9pbnQgPSBkYXRhWydsb3dQb2ludCddIHx8IGNvbW1lbnQubG93UG9pbnQ7XG4gICAgdGhpcy5jb21tZW50c1tpbmRleF0udGFrZUF3YXkgPSBkYXRhWyd0YWtlQXdheSddIHx8IGNvbW1lbnQudGFrZUF3YXk7XG4gICAgdGhpcy5jb21tZW50c1tpbmRleF0ubW9kaWZpZWREYXRlID0gbW9tZW50Lm5vdygpXG4gICAgcmV0dXJuIHRoaXMuY29tbWVudHNbaW5kZXhdO1xuICB9XG4gIC8qKlxuICAgKiBcbiAgICogQHBhcmFtIHt1dWlkfSBpZCBcbiAgICovXG4gIGRlbGV0ZShpZCkge1xuICAgIGNvbnN0IGNvbW1lbnQgPSB0aGlzLmZpbmRPbmUoaWQpO1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5jb21tZW50cy5pbmRleE9mKGNvbW1lbnQpO1xuICAgIHRoaXMuY29tbWVudHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IG5ldyBDb21tZW50KCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "Comment",
        "comments",
        "data",
        "newComment",
        "id",
        "uuid",
        "v4",
        "success",
        "lowPoint",
        "takeAway",
        "createdDate",
        "moment",
        "now",
        "modifiedDate",
        "push",
        "find",
        "cm",
        "comment",
        "findOne",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,O;;;AACJ;;;;AAIA,qBAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,EAAhB;AACD;AACD;;;;;;;;2BAIOC,I,EAAM;AACX,UAAMC,UAAU,GAAG;AACjBC,QAAAA,EAAE,EAAEC,cAAKC,EAAL,EADa;AAEjBC,QAAAA,OAAO,EAAEL,IAAI,CAACK,OAAL,IAAgB,EAFR;AAGjBC,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QAAL,IAAiB,EAHV;AAIjBC,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,IAAiB,EAJV;AAKjBC,QAAAA,WAAW,EAAEC,gBAAOC,GAAP,EALI;AAMjBC,QAAAA,YAAY,EAAEF,gBAAOC,GAAP;AANG,OAAnB;AAQA,WAAKX,QAAL,CAAca,IAAd,CAAmBX,UAAnB;AACA,aAAOA,UAAP;AACD;AACD;;;;;;;;4BAKQC,E,EAAI;AACV,aAAO,KAAKH,QAAL,CAAcc,IAAd,CAAmB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACZ,EAAH,KAAUA,EAAd;AAAA,OAArB,CAAP;AACD;AACD;;;;;;8BAGU;AACR,aAAO,KAAKH,QAAZ;AACD;AACD;;;;;;;;2BAKOG,E,EAAIF,I,EAAM;AACf,UAAMe,OAAO,GAAG,KAAKC,OAAL,CAAad,EAAb,CAAhB;AACA,UAAMe,KAAK,GAAG,KAAKlB,QAAL,CAAcmB,OAAd,CAAsBH,OAAtB,CAAd;AACA,WAAKhB,QAAL,CAAckB,KAAd,EAAqBZ,OAArB,GAA+BL,IAAI,CAAC,SAAD,CAAJ,IAAmBe,OAAO,CAACV,OAA1D;AACA,WAAKN,QAAL,CAAckB,KAAd,EAAqBX,QAArB,GAAgCN,IAAI,CAAC,UAAD,CAAJ,IAAoBe,OAAO,CAACT,QAA5D;AACA,WAAKP,QAAL,CAAckB,KAAd,EAAqBV,QAArB,GAAgCP,IAAI,CAAC,UAAD,CAAJ,IAAoBe,OAAO,CAACR,QAA5D;AACA,WAAKR,QAAL,CAAckB,KAAd,EAAqBN,YAArB,GAAoCF,gBAAOC,GAAP,EAApC;AACA,aAAO,KAAKX,QAAL,CAAckB,KAAd,CAAP;AACD;AACD;;;;;;;4BAIOf,E,EAAI;AACT,UAAMa,OAAO,GAAG,KAAKC,OAAL,CAAad,EAAb,CAAhB;AACA,UAAMe,KAAK,GAAG,KAAKlB,QAAL,CAAcmB,OAAd,CAAsBH,OAAtB,CAAd;AACA,WAAKhB,QAAL,CAAcoB,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACA,aAAO,EAAP;AACD;;;;;;eAEY,IAAInB,OAAJ,E",
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/models",
      "sourcesContent": [
        "import moment from 'moment';\nimport uuid from 'uuid';\n\nclass Comment {\n  /**\n   * class constructor\n   * @param {object} data\n   */\n  constructor() {\n    this.comments = [];\n  }\n  /**\n   * \n   * @returns {object} comment object\n   */\n  create(data) {\n    const newComment = {\n      id: uuid.v4(),\n      success: data.success || '',\n      lowPoint: data.lowPoint || '',\n      takeAway: data.takeAway || '',\n      createdDate: moment.now(),\n      modifiedDate: moment.now()\n    };\n    this.comments.push(newComment);\n    return newComment\n  }\n  /**\n   * \n   * @param {uuid} id\n   * @returns {object} comment object\n   */\n  findOne(id) {\n    return this.comments.find(cm => cm.id === id);\n  }\n  /**\n   * @returns {object} returns all comments\n   */\n  findAll() {\n    return this.comments;\n  }\n  /**\n   * \n   * @param {uuid} id\n   * @param {object} data \n   */\n  update(id, data) {\n    const comment = this.findOne(id);\n    const index = this.comments.indexOf(comment);\n    this.comments[index].success = data['success'] || comment.success;\n    this.comments[index].lowPoint = data['lowPoint'] || comment.lowPoint;\n    this.comments[index].takeAway = data['takeAway'] || comment.takeAway;\n    this.comments[index].modifiedDate = moment.now()\n    return this.comments[index];\n  }\n  /**\n   * \n   * @param {uuid} id \n   */\n  delete(id) {\n    const comment = this.findOne(id);\n    const index = this.comments.indexOf(comment);\n    this.comments.splice(index, 1);\n    return {};\n  }\n}\nexport default new Comment();"
      ]
    },
    "sourceType": "script",
    "mtime": 1550365076441
  },
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers/Comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers/Comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers/Comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers/Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Comment = _interopRequireDefault(require(\"../models/Comment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Comment = {\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object \n   */\n  create: function create(req, res) {\n    if (!req.body.success && !req.body.lowPoint && !req.body.takeAway) {\n      return res.status(400).send({\n        'message': 'All fields are required'\n      });\n    }\n\n    var comment = _Comment.default.create(req.body);\n\n    return res.status(201).send(comment);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} comments array\n   */\n  getAll: function getAll(req, res) {\n    var comments = _Comment.default.findAll();\n\n    return res.status(200).send(comments);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object\n   */\n  getOne: function getOne(req, res) {\n    var comment = _Comment.default.findOne(req.params.id);\n\n    if (!comment) {\n      return res.status(404).send({\n        'message': 'comment not found'\n      });\n    }\n\n    return res.status(200).send(comment);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated comment\n   */\n  update: function update(req, res) {\n    var comment = _Comment.default.findOne(req.params.id);\n\n    if (!comment) {\n      return res.status(404).send({\n        'message': 'comment not found'\n      });\n    }\n\n    var updatedComment = _Comment.default.update(req.params.id, req.body);\n\n    return res.status(200).send(updatedComment);\n  },\n\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n  delete: function _delete(req, res) {\n    var comment = _Comment.default.findOne(req.params.id);\n\n    if (!comment) {\n      return res.status(404).send({\n        'message': 'comment not found'\n      });\n    }\n\n    var ref = _Comment.default.delete(req.params.id);\n\n    return res.status(204).send(ref);\n  }\n};\nvar _default = Comment;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudCIsImNyZWF0ZSIsInJlcSIsInJlcyIsImJvZHkiLCJzdWNjZXNzIiwibG93UG9pbnQiLCJ0YWtlQXdheSIsInN0YXR1cyIsInNlbmQiLCJjb21tZW50IiwiQ29tbWVudE1vZGVsIiwiZ2V0QWxsIiwiY29tbWVudHMiLCJmaW5kQWxsIiwiZ2V0T25lIiwiZmluZE9uZSIsInBhcmFtcyIsImlkIiwidXBkYXRlIiwidXBkYXRlZENvbW1lbnQiLCJkZWxldGUiLCJyZWYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLE9BQU8sR0FBRztBQUNkOzs7Ozs7QUFNQUMsRUFBQUEsTUFQYyxrQkFPUEMsR0FQTyxFQU9GQyxHQVBFLEVBT0c7QUFDZixRQUFJLENBQUNELEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxPQUFWLElBQXFCLENBQUNILEdBQUcsQ0FBQ0UsSUFBSixDQUFTRSxRQUEvQixJQUEyQyxDQUFDSixHQUFHLENBQUNFLElBQUosQ0FBU0csUUFBekQsRUFBbUU7QUFDakUsYUFBT0osR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQyxtQkFBVztBQUFaLE9BQXJCLENBQVA7QUFDRDs7QUFDRCxRQUFNQyxPQUFPLEdBQUdDLGlCQUFhVixNQUFiLENBQW9CQyxHQUFHLENBQUNFLElBQXhCLENBQWhCOztBQUNBLFdBQU9ELEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxPQUFyQixDQUFQO0FBQ0QsR0FiYTs7QUFjZDs7Ozs7O0FBTUFFLEVBQUFBLE1BcEJjLGtCQW9CUFYsR0FwQk8sRUFvQkZDLEdBcEJFLEVBb0JHO0FBQ2YsUUFBTVUsUUFBUSxHQUFHRixpQkFBYUcsT0FBYixFQUFqQjs7QUFDQSxXQUFPWCxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkksUUFBckIsQ0FBUDtBQUNELEdBdkJhOztBQXdCZDs7Ozs7O0FBTUFFLEVBQUFBLE1BOUJjLGtCQThCUGIsR0E5Qk8sRUE4QkZDLEdBOUJFLEVBOEJHO0FBQ2YsUUFBTU8sT0FBTyxHQUFHQyxpQkFBYUssT0FBYixDQUFxQmQsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEVBQWhDLENBQWhCOztBQUNBLFFBQUksQ0FBQ1IsT0FBTCxFQUFjO0FBQ1osYUFBT1AsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQyxtQkFBVztBQUFaLE9BQXJCLENBQVA7QUFDRDs7QUFDRCxXQUFPTixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsT0FBckIsQ0FBUDtBQUNELEdBcENhOztBQXFDZDs7Ozs7O0FBTUFTLEVBQUFBLE1BM0NjLGtCQTJDUGpCLEdBM0NPLEVBMkNGQyxHQTNDRSxFQTJDRztBQUNmLFFBQU1PLE9BQU8sR0FBR0MsaUJBQWFLLE9BQWIsQ0FBcUJkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFQUFoQyxDQUFoQjs7QUFDQSxRQUFJLENBQUNSLE9BQUwsRUFBYztBQUNaLGFBQU9QLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUMsbUJBQVc7QUFBWixPQUFyQixDQUFQO0FBQ0Q7O0FBQ0QsUUFBTVcsY0FBYyxHQUFHVCxpQkFBYVEsTUFBYixDQUFvQmpCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFQUEvQixFQUFtQ2hCLEdBQUcsQ0FBQ0UsSUFBdkMsQ0FBdkI7O0FBQ0EsV0FBT0QsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJXLGNBQXJCLENBQVA7QUFDRCxHQWxEYTs7QUFtRGQ7Ozs7OztBQU1BQyxFQUFBQSxNQXpEYyxtQkF5RFBuQixHQXpETyxFQXlERkMsR0F6REUsRUF5REc7QUFDZixRQUFNTyxPQUFPLEdBQUdDLGlCQUFhSyxPQUFiLENBQXFCZCxHQUFHLENBQUNlLE1BQUosQ0FBV0MsRUFBaEMsQ0FBaEI7O0FBQ0EsUUFBSSxDQUFDUixPQUFMLEVBQWM7QUFDWixhQUFPUCxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLG1CQUFXO0FBQVosT0FBckIsQ0FBUDtBQUNEOztBQUNELFFBQU1hLEdBQUcsR0FBR1gsaUJBQWFVLE1BQWIsQ0FBb0JuQixHQUFHLENBQUNlLE1BQUosQ0FBV0MsRUFBL0IsQ0FBWjs7QUFDQSxXQUFPZixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQmEsR0FBckIsQ0FBUDtBQUNEO0FBaEVhLENBQWhCO2VBbUVldEIsTyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbWV0aWthLm8vdHJhaW5pbmcvZXhwcmVzc19wb3N0Z3Jlc3FsL3NyYy91c2luZ0pTT2JqZWN0L2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbW1lbnRNb2RlbCBmcm9tICcuLi9tb2RlbHMvQ29tbWVudCc7XG5cbmNvbnN0IENvbW1lbnQgPSB7XG4gIC8qKlxuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSBcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBjb21tZW50IG9iamVjdCBcbiAgICovXG4gIGNyZWF0ZShyZXEsIHJlcykge1xuICAgIGlmICghcmVxLmJvZHkuc3VjY2VzcyAmJiAhcmVxLmJvZHkubG93UG9pbnQgJiYgIXJlcS5ib2R5LnRha2VBd2F5KSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoeydtZXNzYWdlJzogJ0FsbCBmaWVsZHMgYXJlIHJlcXVpcmVkJ30pXG4gICAgfVxuICAgIGNvbnN0IGNvbW1lbnQgPSBDb21tZW50TW9kZWwuY3JlYXRlKHJlcS5ib2R5KTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLnNlbmQoY29tbWVudCk7XG4gIH0sXG4gIC8qKlxuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSBcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyBcbiAgICogQHJldHVybnMge29iamVjdH0gY29tbWVudHMgYXJyYXlcbiAgICovXG4gIGdldEFsbChyZXEsIHJlcykge1xuICAgIGNvbnN0IGNvbW1lbnRzID0gQ29tbWVudE1vZGVsLmZpbmRBbGwoKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoY29tbWVudHMpO1xuICB9LFxuICAvKipcbiAgICogXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge29iamVjdH0gY29tbWVudCBvYmplY3RcbiAgICovXG4gIGdldE9uZShyZXEsIHJlcykge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBDb21tZW50TW9kZWwuZmluZE9uZShyZXEucGFyYW1zLmlkKTtcbiAgICBpZiAoIWNvbW1lbnQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnY29tbWVudCBub3QgZm91bmQnfSk7XG4gICAgfVxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChjb21tZW50KTtcbiAgfSxcbiAgLyoqXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB1cGRhdGVkIGNvbW1lbnRcbiAgICovXG4gIHVwZGF0ZShyZXEsIHJlcykge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBDb21tZW50TW9kZWwuZmluZE9uZShyZXEucGFyYW1zLmlkKTtcbiAgICBpZiAoIWNvbW1lbnQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7J21lc3NhZ2UnOiAnY29tbWVudCBub3QgZm91bmQnfSk7XG4gICAgfVxuICAgIGNvbnN0IHVwZGF0ZWRDb21tZW50ID0gQ29tbWVudE1vZGVsLnVwZGF0ZShyZXEucGFyYW1zLmlkLCByZXEuYm9keSlcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQodXBkYXRlZENvbW1lbnQpO1xuICB9LFxuICAvKipcbiAgICogXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXMgXG4gICAqIEByZXR1cm5zIHt2b2lkfSByZXR1cm4gc3RhdHVjIGNvZGUgMjA0IFxuICAgKi9cbiAgZGVsZXRlKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgY29tbWVudCA9IENvbW1lbnRNb2RlbC5maW5kT25lKHJlcS5wYXJhbXMuaWQpO1xuICAgIGlmICghY29tbWVudCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHsnbWVzc2FnZSc6ICdjb21tZW50IG5vdCBmb3VuZCd9KTtcbiAgICB9XG4gICAgY29uc3QgcmVmID0gQ29tbWVudE1vZGVsLmRlbGV0ZShyZXEucGFyYW1zLmlkKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDQpLnNlbmQocmVmKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb21tZW50OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "Comment",
        "create",
        "req",
        "res",
        "body",
        "success",
        "lowPoint",
        "takeAway",
        "status",
        "send",
        "comment",
        "CommentModel",
        "getAll",
        "comments",
        "findAll",
        "getOne",
        "findOne",
        "params",
        "id",
        "update",
        "updatedComment",
        "delete",
        "ref"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,OAAO,GAAG;AACd;;;;;;AAMAC,EAAAA,MAPc,kBAOPC,GAPO,EAOFC,GAPE,EAOG;AACf,QAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,OAAV,IAAqB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAA/B,IAA2C,CAACJ,GAAG,CAACE,IAAJ,CAASG,QAAzD,EAAmE;AACjE,aAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMC,OAAO,GAAGC,iBAAaV,MAAb,CAAoBC,GAAG,CAACE,IAAxB,CAAhB;;AACA,WAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAP;AACD,GAba;;AAcd;;;;;;AAMAE,EAAAA,MApBc,kBAoBPV,GApBO,EAoBFC,GApBE,EAoBG;AACf,QAAMU,QAAQ,GAAGF,iBAAaG,OAAb,EAAjB;;AACA,WAAOX,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,QAArB,CAAP;AACD,GAvBa;;AAwBd;;;;;;AAMAE,EAAAA,MA9Bc,kBA8BPb,GA9BO,EA8BFC,GA9BE,EA8BG;AACf,QAAMO,OAAO,GAAGC,iBAAaK,OAAb,CAAqBd,GAAG,CAACe,MAAJ,CAAWC,EAAhC,CAAhB;;AACA,QAAI,CAACR,OAAL,EAAc;AACZ,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,WAAON,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAP;AACD,GApCa;;AAqCd;;;;;;AAMAS,EAAAA,MA3Cc,kBA2CPjB,GA3CO,EA2CFC,GA3CE,EA2CG;AACf,QAAMO,OAAO,GAAGC,iBAAaK,OAAb,CAAqBd,GAAG,CAACe,MAAJ,CAAWC,EAAhC,CAAhB;;AACA,QAAI,CAACR,OAAL,EAAc;AACZ,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMW,cAAc,GAAGT,iBAAaQ,MAAb,CAAoBjB,GAAG,CAACe,MAAJ,CAAWC,EAA/B,EAAmChB,GAAG,CAACE,IAAvC,CAAvB;;AACA,WAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBW,cAArB,CAAP;AACD,GAlDa;;AAmDd;;;;;;AAMAC,EAAAA,MAzDc,mBAyDPnB,GAzDO,EAyDFC,GAzDE,EAyDG;AACf,QAAMO,OAAO,GAAGC,iBAAaK,OAAb,CAAqBd,GAAG,CAACe,MAAJ,CAAWC,EAAhC,CAAhB;;AACA,QAAI,CAACR,OAAL,EAAc;AACZ,aAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,mBAAW;AAAZ,OAArB,CAAP;AACD;;AACD,QAAMa,GAAG,GAAGX,iBAAaU,MAAb,CAAoBnB,GAAG,CAACe,MAAJ,CAAWC,EAA/B,CAAZ;;AACA,WAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,GAArB,CAAP;AACD;AAhEa,CAAhB;eAmEetB,O",
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingJSObject/controllers",
      "sourcesContent": [
        "import CommentModel from '../models/Comment';\n\nconst Comment = {\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object \n   */\n  create(req, res) {\n    if (!req.body.success && !req.body.lowPoint && !req.body.takeAway) {\n      return res.status(400).send({'message': 'All fields are required'})\n    }\n    const comment = CommentModel.create(req.body);\n    return res.status(201).send(comment);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} comments array\n   */\n  getAll(req, res) {\n    const comments = CommentModel.findAll();\n    return res.status(200).send(comments);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object\n   */\n  getOne(req, res) {\n    const comment = CommentModel.findOne(req.params.id);\n    if (!comment) {\n      return res.status(404).send({'message': 'comment not found'});\n    }\n    return res.status(200).send(comment);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated comment\n   */\n  update(req, res) {\n    const comment = CommentModel.findOne(req.params.id);\n    if (!comment) {\n      return res.status(404).send({'message': 'comment not found'});\n    }\n    const updatedComment = CommentModel.update(req.params.id, req.body)\n    return res.status(200).send(updatedComment);\n  },\n  /**\n   * \n   * @param {object} req \n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n  delete(req, res) {\n    const comment = CommentModel.findOne(req.params.id);\n    if (!comment) {\n      return res.status(404).send({'message': 'comment not found'});\n    }\n    const ref = CommentModel.delete(req.params.id);\n    return res.status(204).send(ref);\n  }\n}\n\nexport default Comment;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550364929369
  },
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql/src/usingJSObject/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/src/usingJSObject/models/Comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingJSObject/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/src/usingJSObject/models/Comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/src/usingJSObject/models/Comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/src/usingJSObject/models/Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingJSObject/models",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Comment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * class constructor\n   * @param {object} data\n   */\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    this.comments = [];\n  }\n  /**\n   * \n   * @returns {object} comment object\n   */\n\n\n  _createClass(Comment, [{\n    key: \"create\",\n    value: function create(data) {\n      var newComment = {\n        id: _uuid.default.v4(),\n        success: data.success || '',\n        lowPoint: data.lowPoint || '',\n        takeAway: data.takeAway || '',\n        createdDate: _moment.default.now(),\n        modifiedDate: _moment.default.now()\n      };\n      this.comments.push(newComment);\n      return newComment;\n    }\n    /**\n     * \n     * @param {uuid} id\n     * @returns {object} comment object\n     */\n\n  }, {\n    key: \"findOne\",\n    value: function findOne(id) {\n      return this.comments.find(function (cm) {\n        return cm.id === id;\n      });\n    }\n    /**\n     * @returns {object} returns all comments\n     */\n\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      return this.comments;\n    }\n    /**\n     * \n     * @param {uuid} id\n     * @param {object} data \n     */\n\n  }, {\n    key: \"update\",\n    value: function update(id, data) {\n      var comment = this.findOne(id);\n      var index = this.comments.indexOf(comment);\n      this.comments[index].success = data['success'] || comment.success;\n      this.comments[index].lowPoint = data['lowPoint'] || comment.lowPoint;\n      this.comments[index].takeAway = data['takeAway'] || comment.takeAway;\n      this.comments[index].modifiedDate = _moment.default.now();\n      return this.comments[index];\n    }\n    /**\n     * \n     * @param {uuid} id \n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var comment = this.findOne(id);\n      var index = this.comments.indexOf(comment);\n      this.comments.splice(index, 1);\n      return {};\n    }\n  }]);\n\n  return Comment;\n}();\n\nvar _default = new Comment();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudCIsImNvbW1lbnRzIiwiZGF0YSIsIm5ld0NvbW1lbnQiLCJpZCIsInV1aWQiLCJ2NCIsInN1Y2Nlc3MiLCJsb3dQb2ludCIsInRha2VBd2F5IiwiY3JlYXRlZERhdGUiLCJtb21lbnQiLCJub3ciLCJtb2RpZmllZERhdGUiLCJwdXNoIiwiZmluZCIsImNtIiwiY29tbWVudCIsImZpbmRPbmUiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztJQUVNQSxPOzs7QUFDSjs7OztBQUlBLHFCQUFjO0FBQUE7O0FBQ1osU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNEO0FBQ0Q7Ozs7Ozs7OzJCQUlPQyxJLEVBQU07QUFDWCxVQUFNQyxVQUFVLEdBQUc7QUFDakJDLFFBQUFBLEVBQUUsRUFBRUMsY0FBS0MsRUFBTCxFQURhO0FBRWpCQyxRQUFBQSxPQUFPLEVBQUVMLElBQUksQ0FBQ0ssT0FBTCxJQUFnQixFQUZSO0FBR2pCQyxRQUFBQSxRQUFRLEVBQUVOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixFQUhWO0FBSWpCQyxRQUFBQSxRQUFRLEVBQUVQLElBQUksQ0FBQ08sUUFBTCxJQUFpQixFQUpWO0FBS2pCQyxRQUFBQSxXQUFXLEVBQUVDLGdCQUFPQyxHQUFQLEVBTEk7QUFNakJDLFFBQUFBLFlBQVksRUFBRUYsZ0JBQU9DLEdBQVA7QUFORyxPQUFuQjtBQVFBLFdBQUtYLFFBQUwsQ0FBY2EsSUFBZCxDQUFtQlgsVUFBbkI7QUFDQSxhQUFPQSxVQUFQO0FBQ0Q7QUFDRDs7Ozs7Ozs7NEJBS1FDLEUsRUFBSTtBQUNWLGFBQU8sS0FBS0gsUUFBTCxDQUFjYyxJQUFkLENBQW1CLFVBQUFDLEVBQUU7QUFBQSxlQUFJQSxFQUFFLENBQUNaLEVBQUgsS0FBVUEsRUFBZDtBQUFBLE9BQXJCLENBQVA7QUFDRDtBQUNEOzs7Ozs7OEJBR1U7QUFDUixhQUFPLEtBQUtILFFBQVo7QUFDRDtBQUNEOzs7Ozs7OzsyQkFLT0csRSxFQUFJRixJLEVBQU07QUFDZixVQUFNZSxPQUFPLEdBQUcsS0FBS0MsT0FBTCxDQUFhZCxFQUFiLENBQWhCO0FBQ0EsVUFBTWUsS0FBSyxHQUFHLEtBQUtsQixRQUFMLENBQWNtQixPQUFkLENBQXNCSCxPQUF0QixDQUFkO0FBQ0EsV0FBS2hCLFFBQUwsQ0FBY2tCLEtBQWQsRUFBcUJaLE9BQXJCLEdBQStCTCxJQUFJLENBQUMsU0FBRCxDQUFKLElBQW1CZSxPQUFPLENBQUNWLE9BQTFEO0FBQ0EsV0FBS04sUUFBTCxDQUFja0IsS0FBZCxFQUFxQlgsUUFBckIsR0FBZ0NOLElBQUksQ0FBQyxVQUFELENBQUosSUFBb0JlLE9BQU8sQ0FBQ1QsUUFBNUQ7QUFDQSxXQUFLUCxRQUFMLENBQWNrQixLQUFkLEVBQXFCVixRQUFyQixHQUFnQ1AsSUFBSSxDQUFDLFVBQUQsQ0FBSixJQUFvQmUsT0FBTyxDQUFDUixRQUE1RDtBQUNBLFdBQUtSLFFBQUwsQ0FBY2tCLEtBQWQsRUFBcUJOLFlBQXJCLEdBQW9DRixnQkFBT0MsR0FBUCxFQUFwQztBQUNBLGFBQU8sS0FBS1gsUUFBTCxDQUFja0IsS0FBZCxDQUFQO0FBQ0Q7QUFDRDs7Ozs7Ozs0QkFJT2YsRSxFQUFJO0FBQ1QsVUFBTWEsT0FBTyxHQUFHLEtBQUtDLE9BQUwsQ0FBYWQsRUFBYixDQUFoQjtBQUNBLFVBQU1lLEtBQUssR0FBRyxLQUFLbEIsUUFBTCxDQUFjbUIsT0FBZCxDQUFzQkgsT0FBdEIsQ0FBZDtBQUNBLFdBQUtoQixRQUFMLENBQWNvQixNQUFkLENBQXFCRixLQUFyQixFQUE0QixDQUE1QjtBQUNBLGFBQU8sRUFBUDtBQUNEOzs7Ozs7ZUFFWSxJQUFJbkIsT0FBSixFIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tZXRpa2Euby90cmFpbmluZy9leHByZXNzX3Bvc3RncmVzcWwvc3JjL3VzaW5nSlNPYmplY3QvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHV1aWQgZnJvbSAndXVpZCc7XG5cbmNsYXNzIENvbW1lbnQge1xuICAvKipcbiAgICogY2xhc3MgY29uc3RydWN0b3JcbiAgICogQHBhcmFtIHtvYmplY3R9IGRhdGFcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY29tbWVudHMgPSBbXTtcbiAgfVxuICAvKipcbiAgICogXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbW1lbnQgb2JqZWN0XG4gICAqL1xuICBjcmVhdGUoZGF0YSkge1xuICAgIGNvbnN0IG5ld0NvbW1lbnQgPSB7XG4gICAgICBpZDogdXVpZC52NCgpLFxuICAgICAgc3VjY2VzczogZGF0YS5zdWNjZXNzIHx8ICcnLFxuICAgICAgbG93UG9pbnQ6IGRhdGEubG93UG9pbnQgfHwgJycsXG4gICAgICB0YWtlQXdheTogZGF0YS50YWtlQXdheSB8fCAnJyxcbiAgICAgIGNyZWF0ZWREYXRlOiBtb21lbnQubm93KCksXG4gICAgICBtb2RpZmllZERhdGU6IG1vbWVudC5ub3coKVxuICAgIH07XG4gICAgdGhpcy5jb21tZW50cy5wdXNoKG5ld0NvbW1lbnQpO1xuICAgIHJldHVybiBuZXdDb21tZW50XG4gIH1cbiAgLyoqXG4gICAqIFxuICAgKiBAcGFyYW0ge3V1aWR9IGlkXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbW1lbnQgb2JqZWN0XG4gICAqL1xuICBmaW5kT25lKGlkKSB7XG4gICAgcmV0dXJuIHRoaXMuY29tbWVudHMuZmluZChjbSA9PiBjbS5pZCA9PT0gaWQpO1xuICB9XG4gIC8qKlxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZXR1cm5zIGFsbCBjb21tZW50c1xuICAgKi9cbiAgZmluZEFsbCgpIHtcbiAgICByZXR1cm4gdGhpcy5jb21tZW50cztcbiAgfVxuICAvKipcbiAgICogXG4gICAqIEBwYXJhbSB7dXVpZH0gaWRcbiAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgXG4gICAqL1xuICB1cGRhdGUoaWQsIGRhdGEpIHtcbiAgICBjb25zdCBjb21tZW50ID0gdGhpcy5maW5kT25lKGlkKTtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuY29tbWVudHMuaW5kZXhPZihjb21tZW50KTtcbiAgICB0aGlzLmNvbW1lbnRzW2luZGV4XS5zdWNjZXNzID0gZGF0YVsnc3VjY2VzcyddIHx8IGNvbW1lbnQuc3VjY2VzcztcbiAgICB0aGlzLmNvbW1lbnRzW2luZGV4XS5sb3dQb2ludCA9IGRhdGFbJ2xvd1BvaW50J10gfHwgY29tbWVudC5sb3dQb2ludDtcbiAgICB0aGlzLmNvbW1lbnRzW2luZGV4XS50YWtlQXdheSA9IGRhdGFbJ3Rha2VBd2F5J10gfHwgY29tbWVudC50YWtlQXdheTtcbiAgICB0aGlzLmNvbW1lbnRzW2luZGV4XS5tb2RpZmllZERhdGUgPSBtb21lbnQubm93KClcbiAgICByZXR1cm4gdGhpcy5jb21tZW50c1tpbmRleF07XG4gIH1cbiAgLyoqXG4gICAqIFxuICAgKiBAcGFyYW0ge3V1aWR9IGlkIFxuICAgKi9cbiAgZGVsZXRlKGlkKSB7XG4gICAgY29uc3QgY29tbWVudCA9IHRoaXMuZmluZE9uZShpZCk7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLmNvbW1lbnRzLmluZGV4T2YoY29tbWVudCk7XG4gICAgdGhpcy5jb21tZW50cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHJldHVybiB7fTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgbmV3IENvbW1lbnQoKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "Comment",
        "comments",
        "data",
        "newComment",
        "id",
        "uuid",
        "v4",
        "success",
        "lowPoint",
        "takeAway",
        "createdDate",
        "moment",
        "now",
        "modifiedDate",
        "push",
        "find",
        "cm",
        "comment",
        "findOne",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,O;;;AACJ;;;;AAIA,qBAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,EAAhB;AACD;AACD;;;;;;;;2BAIOC,I,EAAM;AACX,UAAMC,UAAU,GAAG;AACjBC,QAAAA,EAAE,EAAEC,cAAKC,EAAL,EADa;AAEjBC,QAAAA,OAAO,EAAEL,IAAI,CAACK,OAAL,IAAgB,EAFR;AAGjBC,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QAAL,IAAiB,EAHV;AAIjBC,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,IAAiB,EAJV;AAKjBC,QAAAA,WAAW,EAAEC,gBAAOC,GAAP,EALI;AAMjBC,QAAAA,YAAY,EAAEF,gBAAOC,GAAP;AANG,OAAnB;AAQA,WAAKX,QAAL,CAAca,IAAd,CAAmBX,UAAnB;AACA,aAAOA,UAAP;AACD;AACD;;;;;;;;4BAKQC,E,EAAI;AACV,aAAO,KAAKH,QAAL,CAAcc,IAAd,CAAmB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACZ,EAAH,KAAUA,EAAd;AAAA,OAArB,CAAP;AACD;AACD;;;;;;8BAGU;AACR,aAAO,KAAKH,QAAZ;AACD;AACD;;;;;;;;2BAKOG,E,EAAIF,I,EAAM;AACf,UAAMe,OAAO,GAAG,KAAKC,OAAL,CAAad,EAAb,CAAhB;AACA,UAAMe,KAAK,GAAG,KAAKlB,QAAL,CAAcmB,OAAd,CAAsBH,OAAtB,CAAd;AACA,WAAKhB,QAAL,CAAckB,KAAd,EAAqBZ,OAArB,GAA+BL,IAAI,CAAC,SAAD,CAAJ,IAAmBe,OAAO,CAACV,OAA1D;AACA,WAAKN,QAAL,CAAckB,KAAd,EAAqBX,QAArB,GAAgCN,IAAI,CAAC,UAAD,CAAJ,IAAoBe,OAAO,CAACT,QAA5D;AACA,WAAKP,QAAL,CAAckB,KAAd,EAAqBV,QAArB,GAAgCP,IAAI,CAAC,UAAD,CAAJ,IAAoBe,OAAO,CAACR,QAA5D;AACA,WAAKR,QAAL,CAAckB,KAAd,EAAqBN,YAArB,GAAoCF,gBAAOC,GAAP,EAApC;AACA,aAAO,KAAKX,QAAL,CAAckB,KAAd,CAAP;AACD;AACD;;;;;;;4BAIOf,E,EAAI;AACT,UAAMa,OAAO,GAAG,KAAKC,OAAL,CAAad,EAAb,CAAhB;AACA,UAAMe,KAAK,GAAG,KAAKlB,QAAL,CAAcmB,OAAd,CAAsBH,OAAtB,CAAd;AACA,WAAKhB,QAAL,CAAcoB,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACA,aAAO,EAAP;AACD;;;;;;eAEY,IAAInB,OAAJ,E",
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingJSObject/models",
      "sourcesContent": [
        "import moment from 'moment';\nimport uuid from 'uuid';\n\nclass Comment {\n  /**\n   * class constructor\n   * @param {object} data\n   */\n  constructor() {\n    this.comments = [];\n  }\n  /**\n   * \n   * @returns {object} comment object\n   */\n  create(data) {\n    const newComment = {\n      id: uuid.v4(),\n      success: data.success || '',\n      lowPoint: data.lowPoint || '',\n      takeAway: data.takeAway || '',\n      createdDate: moment.now(),\n      modifiedDate: moment.now()\n    };\n    this.comments.push(newComment);\n    return newComment\n  }\n  /**\n   * \n   * @param {uuid} id\n   * @returns {object} comment object\n   */\n  findOne(id) {\n    return this.comments.find(cm => cm.id === id);\n  }\n  /**\n   * @returns {object} returns all comments\n   */\n  findAll() {\n    return this.comments;\n  }\n  /**\n   * \n   * @param {uuid} id\n   * @param {object} data \n   */\n  update(id, data) {\n    const comment = this.findOne(id);\n    const index = this.comments.indexOf(comment);\n    this.comments[index].success = data['success'] || comment.success;\n    this.comments[index].lowPoint = data['lowPoint'] || comment.lowPoint;\n    this.comments[index].takeAway = data['takeAway'] || comment.takeAway;\n    this.comments[index].modifiedDate = moment.now()\n    return this.comments[index];\n  }\n  /**\n   * \n   * @param {uuid} id \n   */\n  delete(id) {\n    const comment = this.findOne(id);\n    const index = this.comments.indexOf(comment);\n    this.comments.splice(index, 1);\n    return {};\n  }\n}\nexport default new Comment();"
      ]
    },
    "sourceType": "script",
    "mtime": 1550365076441
  },
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql/src/usingDB/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/src/usingDB/controllers/Comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingDB/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/src/usingDB/controllers/Comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/src/usingDB/controllers/Comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/src/usingDB/controllers/Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingDB/controllers",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _db = _interopRequireDefault(require(\"../db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Comment = {\n  /**\n   * Create A Comment\n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object \n   */\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res) {\n      var text, values, _ref, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              text = \"INSERT INTO\\n      comments(id, success, low_point, take_away, created_date, modified_date)\\n      VALUES($1, $2, $3, $4, $5, $6)\\n      returning *\";\n              values = [(0, _v.default)(), req.body.success, req.body.low_point, req.body.take_away, (0, _moment.default)(new Date()), (0, _moment.default)(new Date())];\n              _context.prev = 2;\n              _context.next = 5;\n              return _db.default.query(text, values);\n\n            case 5:\n              _ref = _context.sent;\n              rows = _ref.rows;\n              return _context.abrupt(\"return\", res.status(201).send(rows[0]));\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", res.status(400).send(_context.t0));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 10]]);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n\n  /**\n   * Get All Comment\n   * @param {object} req \n   * @param {object} res \n   * @returns {object} comments array\n   */\n  getAll: function () {\n    var _getAll = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var findAllQuery, _ref2, rows, rowCount;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              findAllQuery = 'SELECT * FROM comments';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _db.default.query(findAllQuery);\n\n            case 4:\n              _ref2 = _context2.sent;\n              rows = _ref2.rows;\n              rowCount = _ref2.rowCount;\n              return _context2.abrupt(\"return\", res.status(200).send({\n                rows: rows,\n                rowCount: rowCount\n              }));\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", res.status(400).send(_context2.t0));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 10]]);\n    }));\n\n    function getAll(_x3, _x4) {\n      return _getAll.apply(this, arguments);\n    }\n\n    return getAll;\n  }(),\n\n  /**\n   * Get A Comment\n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object\n   */\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var text, _ref3, rows;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              text = 'SELECT * FROM comments WHERE id = $1';\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _db.default.query(text, [req.params.id]);\n\n            case 4:\n              _ref3 = _context3.sent;\n              rows = _ref3.rows;\n\n              if (rows[0]) {\n                _context3.next = 8;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(404).send({\n                'message': 'comment not found'\n              }));\n\n            case 8:\n              return _context3.abrupt(\"return\", res.status(200).send(rows[0]));\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", res.status(400).send(_context3.t0));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[1, 11]]);\n    }));\n\n    function getOne(_x5, _x6) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n\n  /**\n   * Update A Comment\n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated comment\n   */\n  update: function () {\n    var _update = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var findOneQuery, updateOneQuery, _ref4, rows, values, response;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              findOneQuery = 'SELECT * FROM comments WHERE id=$1';\n              updateOneQuery = \"UPDATE comments\\n      SET success=$1,low_point=$2,take_away=$3,modified_date=$4\\n      WHERE id=$5 returning *\";\n              _context4.prev = 2;\n              _context4.next = 5;\n              return _db.default.query(findOneQuery, [req.params.id]);\n\n            case 5:\n              _ref4 = _context4.sent;\n              rows = _ref4.rows;\n\n              if (rows[0]) {\n                _context4.next = 9;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.status(404).send({\n                'message': 'comment not found'\n              }));\n\n            case 9:\n              values = [req.body.success || rows[0].success, req.body.low_point || rows[0].low_point, req.body.take_away || rows[0].take_away, (0, _moment.default)(new Date()), req.params.id];\n              _context4.next = 12;\n              return _db.default.query(updateOneQuery, values);\n\n            case 12:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", res.status(200).send(response.rows[0]));\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](2);\n              return _context4.abrupt(\"return\", res.status(400).send(_context4.t0));\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this, [[2, 16]]);\n    }));\n\n    function update(_x7, _x8) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n\n  /**\n   * Delete A Comment\n   * @param {object} req \n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n  delete: function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(req, res) {\n      var deleteQuery, _ref5, rows;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              deleteQuery = 'DELETE FROM comments WHERE id=$1 returning *';\n              _context5.prev = 1;\n              _context5.next = 4;\n              return _db.default.query(deleteQuery, [req.params.id]);\n\n            case 4:\n              _ref5 = _context5.sent;\n              rows = _ref5.rows;\n\n              if (rows[0]) {\n                _context5.next = 8;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", res.status(404).send({\n                'message': 'comment not found'\n              }));\n\n            case 8:\n              return _context5.abrupt(\"return\", res.status(204).send({\n                'message': 'deleted'\n              }));\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", res.status(400).send(_context5.t0));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this, [[1, 11]]);\n    }));\n\n    function _delete(_x9, _x10) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }()\n};\nvar _default = Comment;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "Comment",
        "create",
        "req",
        "res",
        "text",
        "values",
        "body",
        "success",
        "low_point",
        "take_away",
        "Date",
        "db",
        "query",
        "rows",
        "status",
        "send",
        "getAll",
        "findAllQuery",
        "rowCount",
        "getOne",
        "params",
        "id",
        "update",
        "findOneQuery",
        "updateOneQuery",
        "response",
        "delete",
        "deleteQuery"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,OAAO,GAAG;AACd;;;;;;AAMMC,EAAAA,MAPQ;AAAA;AAAA;AAAA,6CAODC,GAPC,EAOIC,GAPJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQNC,cAAAA,IARM;AAYNC,cAAAA,MAZM,GAYG,CACb,iBADa,EAEbH,GAAG,CAACI,IAAJ,CAASC,OAFI,EAGbL,GAAG,CAACI,IAAJ,CAASE,SAHI,EAIbN,GAAG,CAACI,IAAJ,CAASG,SAJI,EAKb,qBAAO,IAAIC,IAAJ,EAAP,CALa,EAMb,qBAAO,IAAIA,IAAJ,EAAP,CANa,CAZH;AAAA;AAAA;AAAA,qBAsBaC,YAAGC,KAAH,CAASR,IAAT,EAAeC,MAAf,CAtBb;;AAAA;AAAA;AAsBFQ,cAAAA,IAtBE,QAsBFA,IAtBE;AAAA,+CAuBHV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAAI,CAAC,CAAD,CAAzB,CAvBG;;AAAA;AAAA;AAAA;AAAA,+CAyBHV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAzBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA4Bd;;;;;;AAMMC,EAAAA,MAlCQ;AAAA;AAAA;AAAA,8CAkCDd,GAlCC,EAkCIC,GAlCJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmCNc,cAAAA,YAnCM,GAmCS,wBAnCT;AAAA;AAAA;AAAA,qBAqCuBN,YAAGC,KAAH,CAASK,YAAT,CArCvB;;AAAA;AAAA;AAqCFJ,cAAAA,IArCE,SAqCFA,IArCE;AAqCIK,cAAAA,QArCJ,SAqCIA,QArCJ;AAAA,gDAsCHf,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,gBAAAA,IAAI,EAAJA,IAAF;AAAQK,gBAAAA,QAAQ,EAARA;AAAR,eAArB,CAtCG;;AAAA;AAAA;AAAA;AAAA,gDAwCHf,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cAxCG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA2Cd;;;;;;AAMMI,EAAAA,MAjDQ;AAAA;AAAA;AAAA,8CAiDDjB,GAjDC,EAiDIC,GAjDJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkDNC,cAAAA,IAlDM,GAkDC,sCAlDD;AAAA;AAAA;AAAA,qBAoDaO,YAAGC,KAAH,CAASR,IAAT,EAAe,CAACF,GAAG,CAACkB,MAAJ,CAAWC,EAAZ,CAAf,CApDb;;AAAA;AAAA;AAoDFR,cAAAA,IApDE,SAoDFA,IApDE;;AAAA,kBAqDLA,IAAI,CAAC,CAAD,CArDC;AAAA;AAAA;AAAA;;AAAA,gDAsDDV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CAtDC;;AAAA;AAAA,gDAwDHZ,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAAI,CAAC,CAAD,CAAzB,CAxDG;;AAAA;AAAA;AAAA;AAAA,gDA0DHV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cA1DG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA6Dd;;;;;;AAMMO,EAAAA,MAnEQ;AAAA;AAAA;AAAA,8CAmEDpB,GAnEC,EAmEIC,GAnEJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoENoB,cAAAA,YApEM,GAoES,oCApET;AAqENC,cAAAA,cArEM;AAAA;AAAA;AAAA,qBAyEab,YAAGC,KAAH,CAASW,YAAT,EAAuB,CAACrB,GAAG,CAACkB,MAAJ,CAAWC,EAAZ,CAAvB,CAzEb;;AAAA;AAAA;AAyEFR,cAAAA,IAzEE,SAyEFA,IAzEE;;AAAA,kBA0ENA,IAAI,CAAC,CAAD,CA1EE;AAAA;AAAA;AAAA;;AAAA,gDA2EDV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CA3EC;;AAAA;AA6EJV,cAAAA,MA7EI,GA6EK,CACbH,GAAG,CAACI,IAAJ,CAASC,OAAT,IAAoBM,IAAI,CAAC,CAAD,CAAJ,CAAQN,OADf,EAEbL,GAAG,CAACI,IAAJ,CAASE,SAAT,IAAsBK,IAAI,CAAC,CAAD,CAAJ,CAAQL,SAFjB,EAGbN,GAAG,CAACI,IAAJ,CAASG,SAAT,IAAsBI,IAAI,CAAC,CAAD,CAAJ,CAAQJ,SAHjB,EAIb,qBAAO,IAAIC,IAAJ,EAAP,CAJa,EAKbR,GAAG,CAACkB,MAAJ,CAAWC,EALE,CA7EL;AAAA;AAAA,qBAoFaV,YAAGC,KAAH,CAASY,cAAT,EAAyBnB,MAAzB,CApFb;;AAAA;AAoFJoB,cAAAA,QApFI;AAAA,gDAqFHtB,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,QAAQ,CAACZ,IAAT,CAAc,CAAd,CAArB,CArFG;;AAAA;AAAA;AAAA;AAAA,gDAuFHV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cAvFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA0Fd;;;;;;AAMMW,EAAAA,MAhGQ;AAAA;AAAA;AAAA,8CAgGDxB,GAhGC,EAgGIC,GAhGJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiGNwB,cAAAA,WAjGM,GAiGQ,8CAjGR;AAAA;AAAA;AAAA,qBAmGahB,YAAGC,KAAH,CAASe,WAAT,EAAsB,CAACzB,GAAG,CAACkB,MAAJ,CAAWC,EAAZ,CAAtB,CAnGb;;AAAA;AAAA;AAmGFR,cAAAA,IAnGE,SAmGFA,IAnGE;;AAAA,kBAoGNA,IAAI,CAAC,CAAD,CApGE;AAAA;AAAA;AAAA;;AAAA,gDAqGDV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CArGC;;AAAA;AAAA,gDAuGHZ,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAvGG;;AAAA;AAAA;AAAA;AAAA,gDAyGHZ,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cAzGG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;eA8Gef,O",
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingDB/controllers",
      "sourcesContent": [
        "import moment from 'moment';\nimport uuidv4 from 'uuid/v4';\nimport db from '../db';\n\nconst Comment = {\n  /**\n   * Create A Comment\n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object \n   */\n  async create(req, res) {\n    const text = `INSERT INTO\n      comments(id, success, low_point, take_away, created_date, modified_date)\n      VALUES($1, $2, $3, $4, $5, $6)\n      returning *`;\n    const values = [\n      uuidv4(),\n      req.body.success,\n      req.body.low_point,\n      req.body.take_away,\n      moment(new Date()),\n      moment(new Date())\n    ];\n\n    try {\n      const { rows } = await db.query(text, values);\n      return res.status(201).send(rows[0]);\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  },\n  /**\n   * Get All Comment\n   * @param {object} req \n   * @param {object} res \n   * @returns {object} comments array\n   */\n  async getAll(req, res) {\n    const findAllQuery = 'SELECT * FROM comments';\n    try {\n      const { rows, rowCount } = await db.query(findAllQuery);\n      return res.status(200).send({ rows, rowCount });\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  },\n  /**\n   * Get A Comment\n   * @param {object} req \n   * @param {object} res\n   * @returns {object} comment object\n   */\n  async getOne(req, res) {\n    const text = 'SELECT * FROM comments WHERE id = $1';\n    try {\n      const { rows } = await db.query(text, [req.params.id]);\n      if (!rows[0]) {\n        return res.status(404).send({'message': 'comment not found'});\n      }\n      return res.status(200).send(rows[0]);\n    } catch(error) {\n      return res.status(400).send(error)\n    }\n  },\n  /**\n   * Update A Comment\n   * @param {object} req \n   * @param {object} res \n   * @returns {object} updated comment\n   */\n  async update(req, res) {\n    const findOneQuery = 'SELECT * FROM comments WHERE id=$1';\n    const updateOneQuery =`UPDATE comments\n      SET success=$1,low_point=$2,take_away=$3,modified_date=$4\n      WHERE id=$5 returning *`;\n    try {\n      const { rows } = await db.query(findOneQuery, [req.params.id]);\n      if(!rows[0]) {\n        return res.status(404).send({'message': 'comment not found'});\n      }\n      const values = [\n        req.body.success || rows[0].success,\n        req.body.low_point || rows[0].low_point,\n        req.body.take_away || rows[0].take_away,\n        moment(new Date()),\n        req.params.id\n      ];\n      const response = await db.query(updateOneQuery, values);\n      return res.status(200).send(response.rows[0]);\n    } catch(err) {\n      return res.status(400).send(err);\n    }\n  },\n  /**\n   * Delete A Comment\n   * @param {object} req \n   * @param {object} res \n   * @returns {void} return statuc code 204 \n   */\n  async delete(req, res) {\n    const deleteQuery = 'DELETE FROM comments WHERE id=$1 returning *';\n    try {\n      const { rows } = await db.query(deleteQuery, [req.params.id]);\n      if(!rows[0]) {\n        return res.status(404).send({'message': 'comment not found'});\n      }\n      return res.status(204).send({ 'message': 'deleted' });\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\nexport default Comment"
      ]
    },
    "sourceType": "script",
    "mtime": 1550369397258
  },
  "{\"sourceRoot\":\"/Users/metika.o/training/express_postgresql/src/usingDB/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/metika.o/training/express_postgresql\",\"filename\":\"/Users/metika.o/training/express_postgresql/src/usingDB/db/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/metika.o/training/express_postgresql\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingDB/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/metika.o/training/express_postgresql",
      "filename": "/Users/metika.o/training/express_postgresql/src/usingDB/db/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/metika.o/training/express_postgresql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/metika.o/training/express_postgresql/src/usingDB/db/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/metika.o/training/express_postgresql/src/usingDB/db/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingDB/db",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// src/usingDB/models/index.js\n_dotenv.default.config();\n\nvar pool = new _pg.Pool({\n  connectionString: process.env.DATABASE_URL\n});\nvar _default = {\n  /**\n   * DB Query\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} object \n   */\n  query: function query(text, params) {\n    return new Promise(function (resolve, reject) {\n      pool.query(text, params).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsInBvb2wiLCJQb29sIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJxdWVyeSIsInRleHQiLCJwYXJhbXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW4iLCJyZXMiLCJjYXRjaCIsImVyciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOzs7O0FBRkE7QUFJQUEsZ0JBQU9DLE1BQVA7O0FBRUEsSUFBTUMsSUFBSSxHQUFHLElBQUlDLFFBQUosQ0FBUztBQUNwQkMsRUFBQUEsZ0JBQWdCLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQURWLENBQVQsQ0FBYjtlQUllO0FBQ2I7Ozs7OztBQU1BQyxFQUFBQSxLQVBhLGlCQU9QQyxJQVBPLEVBT0RDLE1BUEMsRUFPTTtBQUNqQixXQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdENYLE1BQUFBLElBQUksQ0FBQ00sS0FBTCxDQUFXQyxJQUFYLEVBQWlCQyxNQUFqQixFQUNDSSxJQURELENBQ00sVUFBQ0MsR0FBRCxFQUFTO0FBQ2JILFFBQUFBLE9BQU8sQ0FBQ0csR0FBRCxDQUFQO0FBQ0QsT0FIRCxFQUlDQyxLQUpELENBSU8sVUFBQ0MsR0FBRCxFQUFTO0FBQ2RKLFFBQUFBLE1BQU0sQ0FBQ0ksR0FBRCxDQUFOO0FBQ0QsT0FORDtBQU9ELEtBUk0sQ0FBUDtBQVNEO0FBakJZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL21ldGlrYS5vL3RyYWluaW5nL2V4cHJlc3NfcG9zdGdyZXNxbC9zcmMvdXNpbmdEQi9kYiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91c2luZ0RCL21vZGVscy9pbmRleC5qc1xuaW1wb3J0IHsgUG9vbCB9IGZyb20gJ3BnJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcblxuZG90ZW52LmNvbmZpZygpO1xuXG5jb25zdCBwb29sID0gbmV3IFBvb2woe1xuICBjb25uZWN0aW9uU3RyaW5nOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIC8qKlxuICAgKiBEQiBRdWVyeVxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge29iamVjdH0gb2JqZWN0IFxuICAgKi9cbiAgcXVlcnkodGV4dCwgcGFyYW1zKXtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgcG9vbC5xdWVyeSh0ZXh0LCBwYXJhbXMpXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "pool",
        "Pool",
        "connectionString",
        "process",
        "env",
        "DATABASE_URL",
        "query",
        "text",
        "params",
        "Promise",
        "resolve",
        "reject",
        "then",
        "res",
        "catch",
        "err"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;AAFA;AAIAA,gBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAS;AACpBC,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV,CAAT,CAAb;eAIe;AACb;;;;;;AAMAC,EAAAA,KAPa,iBAOPC,IAPO,EAODC,MAPC,EAOM;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,MAAAA,IAAI,CAACM,KAAL,CAAWC,IAAX,EAAiBC,MAAjB,EACCI,IADD,CACM,UAACC,GAAD,EAAS;AACbH,QAAAA,OAAO,CAACG,GAAD,CAAP;AACD,OAHD,EAICC,KAJD,CAIO,UAACC,GAAD,EAAS;AACdJ,QAAAA,MAAM,CAACI,GAAD,CAAN;AACD,OAND;AAOD,KARM,CAAP;AASD;AAjBY,C",
      "sourceRoot": "/Users/metika.o/training/express_postgresql/src/usingDB/db",
      "sourcesContent": [
        "// src/usingDB/models/index.js\nimport { Pool } from 'pg';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL\n});\n\nexport default {\n  /**\n   * DB Query\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} object \n   */\n  query(text, params){\n    return new Promise((resolve, reject) => {\n      pool.query(text, params)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n    })\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550368469680
  }
}